# Generated by Django 4.2.10 on 2025-04-21 00:24

import agro_linker.models.user
from django.conf import settings
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        max_length=15,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator("^\\+?1?\\d{9,15}$")
                        ],
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="email address",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("FARMER", "Farmer"),
                            ("BUYER", "Buyer"),
                            ("AGENT", "Field Agent"),
                            ("ADMIN", "Admin"),
                            ("LOGISTICS", "Logistics Partner"),
                        ],
                        max_length=10,
                    ),
                ),
                ("first_name", models.CharField(blank=True, max_length=50)),
                ("last_name", models.CharField(blank=True, max_length=50)),
                (
                    "national_id",
                    models.CharField(blank=True, max_length=20, unique=True),
                ),
                ("profile_photo", models.URLField(blank=True)),
                ("last_location", models.JSONField(null=True)),
                ("is_verified", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("two_factor_enabled", models.BooleanField(default=False)),
                (
                    "language",
                    models.CharField(
                        choices=[
                            ("en", "English"),
                            ("sw", "Swahili"),
                            ("fr", "French"),
                        ],
                        default="en",
                        max_length=10,
                    ),
                ),
                ("devices", models.JSONField(default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                (
                    "notification_preferences",
                    models.JSONField(
                        blank=True,
                        default=agro_linker.models.user.User.default_notification_preferences,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to.",
                        related_name="agro_linker_user_groups",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="agro_linker_user_permissions",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
            },
            managers=[
                ("objects", agro_linker.models.user.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Cooperative",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("registration_number", models.CharField(max_length=50, unique=True)),
                ("location", models.JSONField(default=dict)),
                ("established_date", models.DateField(blank=True, null=True)),
                ("logo", models.URLField(blank=True)),
                ("description", models.TextField(blank=True)),
            ],
            options={
                "verbose_name": "cooperative",
                "verbose_name_plural": "cooperatives",
            },
        ),
        migrations.CreateModel(
            name="CropInsurance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("policy_number", models.CharField(max_length=50, unique=True)),
                (
                    "coverage_type",
                    models.CharField(
                        choices=[
                            ("drought", "Drought"),
                            ("flood", "Flood"),
                            ("pest", "Pest Infestation"),
                            ("disease", "Crop Disease"),
                            ("fire", "Fire"),
                        ],
                        max_length=50,
                    ),
                ),
                ("crop_type", models.CharField(max_length=100)),
                (
                    "coverage_amount",
                    models.DecimalField(decimal_places=2, max_digits=12),
                ),
                (
                    "premium_amount",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("is_active", models.BooleanField(default=True)),
                ("terms", models.TextField(blank=True)),
            ],
            options={
                "verbose_name": "crop insurance",
                "verbose_name_plural": "crop insurances",
                "ordering": ["-start_date"],
            },
        ),
        migrations.CreateModel(
            name="FarmerProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "farm_size",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0.1)],
                    ),
                ),
                ("location", models.JSONField(default=dict)),
                (
                    "soil_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("clay", "Clay"),
                            ("sandy", "Sandy"),
                            ("loamy", "Loamy"),
                        ],
                        max_length=50,
                    ),
                ),
                ("crops", models.JSONField(blank=True, default=list)),
                ("farming_experience", models.PositiveSmallIntegerField(default=0)),
                (
                    "irrigation_type",
                    models.CharField(
                        blank=True,
                        choices=[("rainfed", "Rainfed"), ("irrigated", "Irrigated")],
                        max_length=30,
                    ),
                ),
                (
                    "average_yield",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "verification_status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("VERIFIED", "Verified"),
                            ("REJECTED", "Rejected"),
                        ],
                        default="PENDING",
                        max_length=10,
                    ),
                ),
                ("verification_documents", models.JSONField(blank=True, null=True)),
                (
                    "credit_score",
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(1000),
                        ],
                    ),
                ),
                ("bank_details", models.JSONField(default=dict)),
                (
                    "cooperative",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="agro_linker.cooperative",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="farmer_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "farmer profile",
                "verbose_name_plural": "farmer profiles",
            },
        ),
        migrations.CreateModel(
            name="LoanApplication",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=12)),
                ("purpose", models.TextField()),
                ("repayment_period_months", models.PositiveSmallIntegerField()),
                ("interest_rate", models.DecimalField(decimal_places=2, max_digits=5)),
                ("collateral_details", models.TextField()),
                (
                    "collateral_value",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=12, null=True
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("disbursed", "Disbursed"),
                            ("repaid", "Repaid"),
                            ("defaulted", "Defaulted"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("application_date", models.DateTimeField(auto_now_add=True)),
                ("approved_at", models.DateTimeField(blank=True, null=True)),
                ("rejection_reason", models.TextField(blank=True)),
                ("reference_id", models.CharField(max_length=20, unique=True)),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "farmer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="loan_applications",
                        to="agro_linker.farmerprofile",
                    ),
                ),
            ],
            options={
                "verbose_name": "loan application",
                "verbose_name_plural": "loan applications",
                "ordering": ["-application_date"],
            },
        ),
        migrations.CreateModel(
            name="LogisticsRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pickup_location", models.JSONField()),
                ("dropoff_location", models.JSONField()),
                (
                    "distance_km",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("scheduled_pickup", models.DateTimeField()),
                ("scheduled_delivery", models.DateTimeField()),
                ("actual_pickup", models.DateTimeField(blank=True, null=True)),
                ("actual_delivery", models.DateTimeField(blank=True, null=True)),
                (
                    "transport_cost",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "payment_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("paid", "Paid"),
                            ("partially_paid", "Partially Paid"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("tracking_code", models.CharField(max_length=50, unique=True)),
                (
                    "current_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("assigned", "Assigned"),
                            ("in_transit", "In Transit"),
                            ("delivered", "Delivered"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "driver",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "logistics request",
                "verbose_name_plural": "logistics requests",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="MobileMoneyProcessor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Offer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                    ),
                ),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                    ),
                ),
                ("delivery_address", models.TextField()),
                ("delivery_date", models.DateField()),
                (
                    "bulk_discount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=5),
                ),
                (
                    "min_quantity",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("ACCEPTED", "Accepted"),
                            ("REJECTED", "Rejected"),
                            ("WITHDRAWN", "Withdrawn"),
                            ("EXPIRED", "Expired"),
                        ],
                        default="PENDING",
                        max_length=10,
                    ),
                ),
                ("rejection_reason", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("expires_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "buyer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="offers_made",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "offer",
                "verbose_name_plural": "offers",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "payment_status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("ESCROW", "Escrow Held"),
                            ("PAID", "Paid"),
                            ("FAILED", "Failed"),
                            ("REFUNDED", "Refunded"),
                        ],
                        default="PENDING",
                        max_length=10,
                    ),
                ),
                ("payment_reference", models.CharField(blank=True, max_length=100)),
                (
                    "payment_method",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("mobile_money", "Mobile Money"),
                            ("bank_transfer", "Bank Transfer"),
                            ("cash", "Cash"),
                        ],
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "bid",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="order",
                        to="agro_linker.offer",
                    ),
                ),
            ],
            options={
                "verbose_name": "order",
                "verbose_name_plural": "orders",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                ("variety", models.CharField(blank=True, max_length=100)),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                    ),
                ),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                    ),
                ),
                (
                    "unit",
                    models.CharField(
                        choices=[
                            ("kg", "Kilogram"),
                            ("g", "Gram"),
                            ("ton", "Metric Ton"),
                        ],
                        default="kg",
                        max_length=10,
                    ),
                ),
                (
                    "minimum_order",
                    models.DecimalField(decimal_places=2, default=1, max_digits=10),
                ),
                (
                    "unit_conversion",
                    models.JSONField(
                        default={"g": 1000, "kg": 1, "ton": 0.001},
                        help_text="Conversion rates for different units",
                    ),
                ),
                (
                    "quality_grade",
                    models.CharField(
                        blank=True,
                        choices=[("A", "Grade A"), ("B", "Grade B"), ("C", "Grade C")],
                        max_length=1,
                    ),
                ),
                ("organic_certified", models.BooleanField(default=False)),
                ("organic_certificate_id", models.CharField(blank=True, max_length=50)),
                ("harvest_date", models.DateField(blank=True, null=True)),
                ("harvest_method", models.CharField(blank=True, max_length=50)),
                ("storage_conditions", models.CharField(blank=True, max_length=100)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("DRAFT", "Draft"),
                            ("ACTIVE", "Active"),
                            ("RESERVED", "Reserved"),
                            ("SOLD", "Sold"),
                            ("EXPIRED", "Expired"),
                        ],
                        default="DRAFT",
                        max_length=10,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("expiry_date", models.DateField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "product",
                "verbose_name_plural": "products",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SavingsAccount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("account_number", models.CharField(max_length=20, unique=True)),
                (
                    "balance",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                (
                    "target_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=12, null=True
                    ),
                ),
                ("locked_until", models.DateField(blank=True, null=True)),
                (
                    "interest_rate",
                    models.DecimalField(decimal_places=2, default=0, max_digits=4),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="savings_accounts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "savings account",
                "verbose_name_plural": "savings accounts",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SMSGateway",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ThriftAttendance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("attended", models.BooleanField(default=False)),
                ("contribution_paid", models.BooleanField(default=False)),
                ("notes", models.TextField(blank=True)),
            ],
            options={
                "verbose_name": "thrift attendance",
                "verbose_name_plural": "thrift attendances",
            },
        ),
        migrations.CreateModel(
            name="ThriftGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                ("meeting_schedule", models.CharField(max_length=50)),
                (
                    "contribution_amount",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                ("cycle_duration", models.PositiveSmallIntegerField()),
                ("current_cycle", models.PositiveIntegerField(default=1)),
                ("meeting_location", models.JSONField(default=dict)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "admin",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="managed_thrift_groups",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "thrift group",
                "verbose_name_plural": "thrift groups",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ThriftLoan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=12)),
                ("purpose", models.TextField()),
                ("interest_rate", models.DecimalField(decimal_places=2, max_digits=5)),
                ("repayment_period", models.PositiveSmallIntegerField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("disbursed", "Disbursed"),
                            ("repaid", "Repaid"),
                            ("defaulted", "Defaulted"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("application_date", models.DateTimeField(auto_now_add=True)),
                ("approved_date", models.DateTimeField(blank=True, null=True)),
                ("disbursement_date", models.DateTimeField(blank=True, null=True)),
                ("repayment_schedule", models.JSONField(default=list)),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="loans",
                        to="agro_linker.thriftgroup",
                    ),
                ),
            ],
            options={
                "verbose_name": "thrift loan",
                "verbose_name_plural": "thrift loans",
                "ordering": ["-application_date"],
            },
        ),
        migrations.CreateModel(
            name="ThriftMembership",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("join_date", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
                ("rotation_order", models.PositiveIntegerField()),
                (
                    "total_contributions",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                ("last_contribution_date", models.DateTimeField(blank=True, null=True)),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="memberships",
                        to="agro_linker.thriftgroup",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="thrift_memberships",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "thrift membership",
                "verbose_name_plural": "thrift memberships",
                "ordering": ["rotation_order"],
                "unique_together": {("group", "user")},
            },
        ),
        migrations.CreateModel(
            name="Wallet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "balance",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="WeatherData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("location", models.CharField(max_length=255)),
                ("date", models.DateField()),
                ("temperature", models.DecimalField(decimal_places=2, max_digits=5)),
                ("humidity", models.DecimalField(decimal_places=2, max_digits=5)),
                ("precipitation", models.DecimalField(decimal_places=2, max_digits=5)),
                ("wind_speed", models.DecimalField(decimal_places=2, max_digits=5)),
                ("weather_condition", models.CharField(max_length=50)),
                ("forecast", models.JSONField(default=dict)),
            ],
            options={
                "verbose_name": "weather data",
                "verbose_name_plural": "weather data",
                "ordering": ["-date"],
                "unique_together": {("location", "date")},
            },
        ),
        migrations.CreateModel(
            name="WalletTransaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("transaction_type", models.CharField(max_length=10)),
                ("transaction_reference", models.CharField(max_length=100)),
                ("transaction_date", models.DateTimeField(auto_now_add=True)),
                (
                    "wallet",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="agro_linker.wallet",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Vehicle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("plate_number", models.CharField(max_length=15, unique=True)),
                (
                    "vehicle_type",
                    models.CharField(
                        choices=[
                            ("TRUCK", "Truck"),
                            ("PICKUP", "Pickup Truck"),
                            ("VAN", "Van"),
                            ("COLD_CHAIN", "Refrigerated Truck"),
                            ("MOTORCYCLE", "Motorcycle"),
                        ],
                        max_length=20,
                    ),
                ),
                ("capacity", models.DecimalField(decimal_places=2, max_digits=10)),
                ("is_available", models.BooleanField(default=True)),
                ("is_active", models.BooleanField(default=True)),
                ("last_maintenance", models.DateField(blank=True, null=True)),
                ("insurance_details", models.JSONField(blank=True, default=dict)),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vehicles",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "vehicle",
                "verbose_name_plural": "vehicles",
                "ordering": ["vehicle_type", "plate_number"],
            },
        ),
        migrations.CreateModel(
            name="TrackingStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("preparing", "Preparing Shipment"),
                            ("in_transit", "In Transit"),
                            ("delayed", "Delayed"),
                            ("delivered", "Delivered"),
                            ("returned", "Returned"),
                        ],
                        max_length=20,
                    ),
                ),
                ("location", models.JSONField(blank=True, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "logistics",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tracking_history",
                        to="agro_linker.logisticsrequest",
                    ),
                ),
            ],
            options={
                "verbose_name": "tracking status",
                "verbose_name_plural": "tracking statuses",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="ThriftPenalty",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("reason", models.TextField()),
                ("cycle", models.PositiveIntegerField()),
                ("is_paid", models.BooleanField(default=False)),
                ("payment_date", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "membership",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="penalties",
                        to="agro_linker.thriftmembership",
                    ),
                ),
            ],
            options={
                "verbose_name": "thrift penalty",
                "verbose_name_plural": "thrift penalties",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ThriftMeeting",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("meeting_date", models.DateField()),
                ("start_time", models.TimeField()),
                ("end_time", models.TimeField(blank=True, null=True)),
                ("location", models.JSONField(default=dict)),
                ("agenda", models.TextField(blank=True)),
                ("minutes", models.TextField(blank=True)),
                ("is_regular", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "attendees",
                    models.ManyToManyField(
                        through="agro_linker.ThriftAttendance",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="meetings",
                        to="agro_linker.thriftgroup",
                    ),
                ),
            ],
            options={
                "verbose_name": "thrift meeting",
                "verbose_name_plural": "thrift meetings",
                "ordering": ["-meeting_date"],
            },
        ),
        migrations.CreateModel(
            name="ThriftLoanRepayment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=12)),
                ("installment_number", models.PositiveSmallIntegerField()),
                ("due_date", models.DateField()),
                ("payment_date", models.DateTimeField(auto_now_add=True)),
                (
                    "payment_method",
                    models.CharField(
                        choices=[
                            ("CASH", "Cash"),
                            ("TRANSFER", "Bank Transfer"),
                            ("MOBILE_MONEY", "Mobile Money"),
                        ],
                        max_length=20,
                    ),
                ),
                ("transaction_reference", models.CharField(max_length=100)),
                ("is_late", models.BooleanField(default=False)),
                (
                    "late_fee",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "loan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="repayments",
                        to="agro_linker.thriftloan",
                    ),
                ),
            ],
            options={
                "verbose_name": "thrift loan repayment",
                "verbose_name_plural": "thrift loan repayments",
                "ordering": ["loan", "installment_number"],
            },
        ),
        migrations.AddField(
            model_name="thriftloan",
            name="guarantors",
            field=models.ManyToManyField(
                related_name="guaranteed_loans", to="agro_linker.thriftmembership"
            ),
        ),
        migrations.AddField(
            model_name="thriftloan",
            name="member",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="loans",
                to="agro_linker.thriftmembership",
            ),
        ),
        migrations.AddField(
            model_name="thriftattendance",
            name="meeting",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="agro_linker.thriftmeeting",
            ),
        ),
        migrations.AddField(
            model_name="thriftattendance",
            name="member",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.CreateModel(
            name="SavingsTransaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=12)),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[
                            ("deposit", "Deposit"),
                            ("withdrawal", "Withdrawal"),
                            ("interest", "Interest"),
                            ("transfer", "Transfer"),
                        ],
                        max_length=20,
                    ),
                ),
                ("reference", models.CharField(max_length=100)),
                ("balance_after", models.DecimalField(decimal_places=2, max_digits=12)),
                ("transaction_date", models.DateTimeField(auto_now_add=True)),
                ("notes", models.TextField(blank=True)),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transactions",
                        to="agro_linker.savingsaccount",
                    ),
                ),
            ],
            options={
                "verbose_name": "savings transaction",
                "verbose_name_plural": "savings transactions",
                "ordering": ["-transaction_date"],
            },
        ),
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image_url", models.URLField()),
                ("is_primary", models.BooleanField(default=False)),
                ("caption", models.CharField(blank=True, max_length=100)),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_images",
                        to="agro_linker.product",
                    ),
                ),
            ],
            options={
                "verbose_name": "product image",
                "verbose_name_plural": "product images",
                "ordering": ["-is_primary", "uploaded_at"],
            },
        ),
        migrations.CreateModel(
            name="ProductCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("image", models.URLField(blank=True)),
                ("description", models.TextField(blank=True)),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="agro_linker.productcategory",
                    ),
                ),
            ],
            options={
                "verbose_name": "product category",
                "verbose_name_plural": "product categories",
                "ordering": ["name"],
            },
        ),
        migrations.AddField(
            model_name="product",
            name="category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="agro_linker.productcategory",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="farmer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="products",
                to="agro_linker.farmerprofile",
            ),
        ),
        migrations.CreateModel(
            name="PriceTrend",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("crop_type", models.CharField(max_length=50)),
                ("market", models.CharField(max_length=100)),
                ("date", models.DateField()),
                ("avg_price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("min_price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("max_price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "predicted_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("price_unit", models.CharField(default="kg", max_length=10)),
                ("source", models.CharField(blank=True, max_length=100)),
            ],
            options={
                "verbose_name": "price trend",
                "verbose_name_plural": "price trends",
                "ordering": ["-date"],
                "unique_together": {("crop_type", "market", "date")},
            },
        ),
        migrations.CreateModel(
            name="OrderItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.DecimalField(decimal_places=2, max_digits=10)),
                ("unit_price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="agro_linker.order",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="order_items",
                        to="agro_linker.product",
                    ),
                ),
            ],
            options={
                "verbose_name": "order item",
                "verbose_name_plural": "order items",
            },
        ),
        migrations.AddField(
            model_name="offer",
            name="product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="offers",
                to="agro_linker.product",
            ),
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("SMS", "SMS"),
                            ("WHATSAPP", "WhatsApp"),
                            ("EMAIL", "Email"),
                            ("PUSH", "Push Notification"),
                        ],
                        max_length=10,
                    ),
                ),
                ("message", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("SENT", "Sent"),
                            ("FAILED", "Failed"),
                            ("READ", "Read"),
                        ],
                        default="PENDING",
                        max_length=10,
                    ),
                ),
                ("metadata", models.JSONField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("read_at", models.DateTimeField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "notification",
                "verbose_name_plural": "notifications",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="logisticsrequest",
            name="order",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="logistics",
                to="agro_linker.order",
            ),
        ),
        migrations.AddField(
            model_name="logisticsrequest",
            name="vehicle",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="agro_linker.vehicle",
            ),
        ),
        migrations.CreateModel(
            name="LoanRepayment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=12)),
                ("transaction_reference", models.CharField(max_length=255)),
                (
                    "payment_method",
                    models.CharField(
                        choices=[
                            ("mobile_money", "Mobile Money"),
                            ("bank_transfer", "Bank Transfer"),
                            ("cash", "Cash"),
                        ],
                        max_length=20,
                    ),
                ),
                ("payment_date", models.DateTimeField(auto_now_add=True)),
                ("verified", models.BooleanField(default=False)),
                ("verified_at", models.DateTimeField(blank=True, null=True)),
                (
                    "loan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="repayments",
                        to="agro_linker.loanapplication",
                    ),
                ),
                (
                    "verified_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "loan repayment",
                "verbose_name_plural": "loan repayments",
                "ordering": ["payment_date"],
            },
        ),
        migrations.CreateModel(
            name="InsuranceClaim",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("claim_amount", models.DecimalField(decimal_places=2, max_digits=12)),
                ("claim_date", models.DateField()),
                ("incident_date", models.DateField()),
                ("description", models.TextField()),
                ("evidence", models.JSONField(default=list)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("submitted", "Submitted"),
                            ("under_review", "Under Review"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("paid", "Paid"),
                        ],
                        default="submitted",
                        max_length=20,
                    ),
                ),
                ("decision_date", models.DateTimeField(blank=True, null=True)),
                ("decision_notes", models.TextField(blank=True)),
                ("payment_reference", models.CharField(blank=True, max_length=100)),
                (
                    "insurance",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="claims",
                        to="agro_linker.cropinsurance",
                    ),
                ),
            ],
            options={
                "verbose_name": "insurance claim",
                "verbose_name_plural": "insurance claims",
                "ordering": ["-claim_date"],
            },
        ),
        migrations.CreateModel(
            name="FarmerSubscription",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tier",
                    models.CharField(
                        choices=[
                            ("basic", "Basic (Free)"),
                            ("premium", "Premium (₦5,000/month)"),
                            ("enterprise", "Enterprise (₦15,000/month)"),
                        ],
                        default="basic",
                        max_length=20,
                    ),
                ),
                ("starts_at", models.DateTimeField(auto_now_add=True)),
                ("expires_at", models.DateTimeField()),
                ("features", models.JSONField(default=list)),
                ("is_active", models.BooleanField(default=True)),
                ("payment_reference", models.CharField(blank=True, max_length=100)),
                (
                    "farmer",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subscription",
                        to="agro_linker.farmerprofile",
                    ),
                ),
            ],
            options={
                "verbose_name": "farmer subscription",
                "verbose_name_plural": "farmer subscriptions",
            },
        ),
        migrations.CreateModel(
            name="CropListing",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.DecimalField(decimal_places=2, max_digits=10)),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "farmer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="agro_linker.farmerprofile",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="agro_linker.product",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="cropinsurance",
            name="farmer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="insurance_policies",
                to="agro_linker.farmerprofile",
            ),
        ),
        migrations.CreateModel(
            name="CropCalendar",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("crop_type", models.CharField(max_length=100)),
                ("region", models.CharField(max_length=50)),
                (
                    "planting_months",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(), size=None
                    ),
                ),
                (
                    "harvesting_months",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(), size=None
                    ),
                ),
                ("optimal_conditions", models.JSONField(default=dict)),
            ],
            options={
                "verbose_name": "crop calendar",
                "verbose_name_plural": "crop calendars",
                "unique_together": {("crop_type", "region")},
            },
        ),
        migrations.CreateModel(
            name="Contract",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.DecimalField(decimal_places=2, max_digits=10)),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "buyer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "farmer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="agro_linker.farmerprofile",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="agro_linker.product",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ChatRoom",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_message", models.DateTimeField(blank=True, null=True)),
                ("is_group", models.BooleanField(default=False)),
                ("name", models.CharField(blank=True, max_length=100)),
                (
                    "participants",
                    models.ManyToManyField(
                        related_name="chat_rooms", to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
            options={
                "verbose_name": "chat room",
                "verbose_name_plural": "chat rooms",
                "ordering": ["-last_message"],
            },
        ),
        migrations.CreateModel(
            name="ChatMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField()),
                ("is_read", models.BooleanField(default=False)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "room",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages",
                        to="agro_linker.chatroom",
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sent_messages",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "chat message",
                "verbose_name_plural": "chat messages",
                "ordering": ["timestamp"],
            },
        ),
        migrations.CreateModel(
            name="BuyerProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("company_name", models.CharField(max_length=100)),
                ("license_number", models.CharField(max_length=50, unique=True)),
                (
                    "business_type",
                    models.CharField(
                        choices=[
                            ("retailer", "Retailer"),
                            ("wholesaler", "Wholesaler"),
                            ("processor", "Processor"),
                            ("exporter", "Exporter"),
                        ],
                        max_length=50,
                    ),
                ),
                ("preferred_crops", models.JSONField(blank=True, default=list)),
                (
                    "purchase_capacity",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=12, null=True
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="buyer_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "buyer profile",
                "verbose_name_plural": "buyer profiles",
            },
        ),
        migrations.CreateModel(
            name="Bid",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("quantity", models.DecimalField(decimal_places=2, max_digits=10)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "buyer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="agro_linker.product",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AgroAnalytics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(unique=True)),
                ("active_farmers", models.PositiveIntegerField(default=0)),
                ("active_buyers", models.PositiveIntegerField(default=0)),
                ("products_listed", models.PositiveIntegerField(default=0)),
                ("transactions_completed", models.PositiveIntegerField(default=0)),
                (
                    "total_transaction_value",
                    models.DecimalField(decimal_places=2, default=0, max_digits=15),
                ),
                (
                    "average_product_price",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("new_registrations", models.PositiveIntegerField(default=0)),
                ("thrift_groups_active", models.PositiveIntegerField(default=0)),
                ("loans_disbursed", models.PositiveIntegerField(default=0)),
                (
                    "loan_amount_disbursed",
                    models.DecimalField(decimal_places=2, default=0, max_digits=15),
                ),
            ],
            options={
                "verbose_name": "agro analytics",
                "verbose_name_plural": "agro analytics",
                "ordering": ["-date"],
                "indexes": [
                    models.Index(fields=["date"], name="agro_linker_date_7b54f5_idx")
                ],
            },
        ),
        migrations.CreateModel(
            name="ThriftPayout",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cycle", models.PositiveIntegerField(help_text="Payout cycle number")),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("payout_order", models.PositiveSmallIntegerField()),
                ("is_disbursed", models.BooleanField(default=False)),
                ("disbursement_date", models.DateTimeField(blank=True, null=True)),
                (
                    "disbursement_method",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("CASH", "Cash"),
                            ("TRANSFER", "Bank Transfer"),
                            ("MOBILE_MONEY", "Mobile Money"),
                        ],
                        max_length=20,
                    ),
                ),
                ("transaction_reference", models.CharField(blank=True, max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "beneficiary",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="thrift_payouts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payouts",
                        to="agro_linker.thriftgroup",
                    ),
                ),
            ],
            options={
                "verbose_name": "thrift payout",
                "verbose_name_plural": "thrift payouts",
                "ordering": ["-cycle", "payout_order"],
                "unique_together": {("group", "cycle", "payout_order")},
            },
        ),
        migrations.CreateModel(
            name="ThriftCycle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cycle_number", models.PositiveIntegerField()),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("is_completed", models.BooleanField(default=False)),
                (
                    "total_contributions",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                (
                    "total_payouts",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cycles",
                        to="agro_linker.thriftgroup",
                    ),
                ),
            ],
            options={
                "verbose_name": "thrift cycle",
                "verbose_name_plural": "thrift cycles",
                "ordering": ["-cycle_number"],
                "unique_together": {("group", "cycle_number")},
            },
        ),
        migrations.CreateModel(
            name="ThriftContribution",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "cycle",
                    models.PositiveIntegerField(help_text="Contribution cycle number"),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "payment_method",
                    models.CharField(
                        choices=[
                            ("CASH", "Cash"),
                            ("TRANSFER", "Bank Transfer"),
                            ("MOBILE_MONEY", "Mobile Money"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "transaction_reference",
                    models.CharField(max_length=100, unique=True),
                ),
                ("is_verified", models.BooleanField(default=False)),
                ("verified_at", models.DateTimeField(blank=True, null=True)),
                ("date_paid", models.DateTimeField(auto_now_add=True)),
                ("notes", models.TextField(blank=True)),
                (
                    "membership",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contributions",
                        to="agro_linker.thriftmembership",
                    ),
                ),
                (
                    "verified_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "thrift contribution",
                "verbose_name_plural": "thrift contributions",
                "ordering": ["-date_paid"],
                "indexes": [
                    models.Index(
                        fields=["transaction_reference"],
                        name="agro_linker_transac_eaadbd_idx",
                    ),
                    models.Index(
                        fields=["membership", "cycle"],
                        name="agro_linker_members_b21e88_idx",
                    ),
                ],
            },
        ),
        migrations.AlterUniqueTogether(
            name="thriftattendance",
            unique_together={("meeting", "member")},
        ),
        migrations.CreateModel(
            name="SystemSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("key", models.CharField(max_length=50, unique=True)),
                ("value", models.JSONField()),
                ("description", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("create", "Create"),
                            ("update", "Update"),
                            ("delete", "Delete"),
                            ("login", "Login"),
                            ("logout", "Logout"),
                            ("payment", "Payment"),
                            ("verification", "Verification"),
                            ("api_call", "API Call"),
                        ],
                        max_length=20,
                    ),
                ),
                ("model", models.CharField(max_length=50)),
                ("object_id", models.CharField(blank=True, max_length=50)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                ("before_state", models.JSONField(blank=True, null=True)),
                ("after_state", models.JSONField(blank=True, null=True)),
                ("metadata", models.JSONField(default=dict)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "audit log",
                "verbose_name_plural": "audit logs",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["user", "timestamp"],
                        name="agro_linker_user_id_e60ca0_idx",
                    ),
                    models.Index(
                        fields=["model", "object_id"],
                        name="agro_linker_model_ec1184_idx",
                    ),
                    models.Index(
                        fields=["action", "timestamp"],
                        name="agro_linker_action_b87cc1_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="RepaymentSchedule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("installment_number", models.PositiveSmallIntegerField()),
                ("due_date", models.DateField()),
                ("amount", models.DecimalField(decimal_places=2, max_digits=12)),
                (
                    "amount_paid",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=12, null=True
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("paid", "Paid"),
                            ("overdue", "Overdue"),
                            ("partially_paid", "Partially Paid"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "loan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="repayment_schedules",
                        to="agro_linker.loanapplication",
                    ),
                ),
            ],
            options={
                "verbose_name": "repayment schedule",
                "verbose_name_plural": "repayment schedules",
                "ordering": ["due_date"],
                "unique_together": {("loan", "installment_number")},
            },
        ),
        migrations.CreateModel(
            name="ProductReview",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rating",
                    models.PositiveSmallIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ]
                    ),
                ),
                ("comment", models.TextField()),
                ("is_verified_purchase", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="agro_linker.product",
                    ),
                ),
                (
                    "reviewer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "product review",
                "verbose_name_plural": "product reviews",
                "ordering": ["-created_at"],
                "unique_together": {("product", "reviewer")},
            },
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(fields=["status"], name="agro_linker_status_8ba013_idx"),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["category"], name="agro_linker_categor_c97c01_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(fields=["price"], name="agro_linker_price_b55384_idx"),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["farmer", "status"], name="agro_linker_farmer__9aad96_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="order",
            index=models.Index(
                fields=["payment_status"], name="agro_linker_payment_0fa956_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="offer",
            index=models.Index(
                fields=["status", "expires_at"], name="agro_linker_status_85c966_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="offer",
            index=models.Index(
                fields=["product", "status"], name="agro_linker_product_4cfd7e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="offer",
            index=models.Index(
                fields=["buyer", "status"], name="agro_linker_buyer_i_0c51f1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(
                fields=["user", "status"], name="agro_linker_user_id_8f0952_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(
                fields=["phone", "is_active"], name="agro_linker_phone_a58ba7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["role"], name="agro_linker_role_e8f529_idx"),
        ),
    ]
